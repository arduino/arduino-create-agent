version: "2"

tasks:

  build:
    desc: Build the project
    cmds:
      - go build -v -i {{.LDFLAGS}}

  test:
    desc: Run the full testsuite, `legacy` will be skipped
    cmds:
      - task: test-unit

  test-unit:
    desc: Run unit tests only
    cmds:
      - go test -short -run '{{ default ".*" .TEST_REGEX }}' {{ default "-v" .GOFLAGS }} -coverprofile=coverage_unit.txt {{ default .DEFAULT_TARGETS .TARGETS }} {{.TEST_LDFLAGS}}

  check:
    desc: Check fmt and lint
    cmds:
      - go version
      - go fmt {{ default .DEFAULT_TARGETS .TARGETS }}
      - test -z $(go fmt {{ default .DEFAULT_TARGETS .TARGETS }})
      - echo 'test ok'
      - go vet {{ default .DEFAULT_TARGETS .TARGETS }}
      - echo 'vet ok'
      # FIXME: too many suggestions are failing the check, I'll fix these one in
      # another PR.
      # - "'{{.GOLINTBIN}}' {{.GOLINTFLAGS}} {{ default .DEFAULT_TARGETS .TARGETS }}"
      # - task: i18n:check
      # - task: python:check
      # - task: docs:check
      # - task: config:check

vars:
  # all modules of this project except for "gen/..." module
  DEFAULT_TARGETS:
    sh: echo `go list ./... | grep -v 'arduino-create-agent/gen/' | tr '\n' ' '`
  # build vars
  COMMIT:
    sh: echo ${TRAVIS_COMMIT:-`git log -n 1 --format=%h`}
  LDFLAGS: >
    -ldflags '-X github.com/arduino/arduino-create-agent/version.commit={{.COMMIT}}'
  # test vars
  GOFLAGS: "-timeout 10m -v -coverpkg=./... -covermode=atomic"
  TEST_VERSIONSTRING: "0.0.0-test.preview"
  TEST_COMMIT: "deadbeef"
  TEST_LDFLAGS: >
    -ldflags  '-X github.com/arduino/arduino-create-agent/version.versionString={{.TEST_VERSIONSTRING}}
    -X github.com/arduino/arduino-create-agent/version.commit={{.TEST_COMMIT}}'
  # check-lint vars
  GOLINTBIN:
    sh: go list -f {{"{{"}}".Target{{"}}"}}" golang.org/x/lint/golint
  GOLINTFLAGS: "-min_confidence 0.8 -set_exit_status"
  # # docs versioning
  # DOCS_VERSION: dev
  # DOCS_ALIAS: ""
  # DOCS_REMOTE: "origin"
  PRETTIER: prettier@2.0.5