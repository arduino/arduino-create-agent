name: test

on:
  pull_request:

jobs:
  test-matrix:
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Disable EOL conversions
        run: git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.14"

      - name: Install Dependencies (Linux)
        # run: sudo apt-get install ninja-build
        run: sudo apt update && sudo apt install -y --no-install-recommends build-essential libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev
        if: matrix.operating-system == 'ubuntu-latest'

      - name: Install Go deps
        # Since 10/23/2019 pwsh is the default shell
        # on Windows, but pwsh fails to install protoc-gen-go so
        # we force bash as default shell for all OSes in this task
        run: |
          go get github.com/golangci/govet
          go get golang.org/x/lint/golint
        shell: bash

      - name: Install Taskfile
        uses: Arduino/actions/setup-taskfile@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check the code is good
        run: task check

      - name: Build the Agent
        run: task build
        if: matrix.operating-system != 'windows-latest'

      - name: Build the Agent for win
        run: task build-win
        if: matrix.operating-system == 'windows-latest'

      - name: Run unit tests
        run: task test-unit

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: arduino-create-agent-${{ matrix.operating-system }}
          path: arduino-create-agent*
          if-no-files-found: error

      # - name: Send unit tests coverage to Codecov
      #   if: >
      #     matrix.operating-system == 'ubuntu-latest' &&
      #     github.event_name == 'push'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage_unit.txt
      #     flags: unit

      # - name: Send legacy tests coverage to Codecov
      #   if: >
      #     matrix.operating-system == 'ubuntu-latest' &&
      #     github.event_name == 'push'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage_legacy.txt
      #     flags: unit

      # - name: Send integration tests coverage to Codecov
      #   if: >
      #     matrix.operating-system == 'ubuntu-latest' &&
      #     github.event_name == 'push'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage_integ.txt
      #     flags: integ
