// Code generated by goa v3.13.1, DO NOT EDIT.
//
// indexes HTTP client CLI support package
//
// Command:
// $ goa gen github.com/arduino/arduino-create-agent/design

package client

import (
	"encoding/json"
	"fmt"

	indexes "github.com/arduino/arduino-create-agent/gen/indexes"
)

// BuildAddPayload builds the payload for the indexes add endpoint from CLI
// flags.
func BuildAddPayload(indexesAddBody string) (*indexes.IndexPayload, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(indexesAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"url\": \"https://downloads.arduino.cc/packages/package_index.json\"\n   }'")
		}
	}
	v := &indexes.IndexPayload{
		URL: body.URL,
	}

	return v, nil
}

// BuildRemovePayload builds the payload for the indexes remove endpoint from
// CLI flags.
func BuildRemovePayload(indexesRemoveBody string) (*indexes.IndexPayload, error) {
	var err error
	var body RemoveRequestBody
	{
		err = json.Unmarshal([]byte(indexesRemoveBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"url\": \"https://downloads.arduino.cc/packages/package_index.json\"\n   }'")
		}
	}
	v := &indexes.IndexPayload{
		URL: body.URL,
	}

	return v, nil
}
